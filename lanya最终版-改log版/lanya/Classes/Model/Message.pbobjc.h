// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DataTransfer;
@class Identity;
@class TransportUpgrade;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MessageRoot : GPBRootObject
@end

#pragma mark - Frame

typedef GPB_ENUM(Frame_FieldNumber) {
  Frame_FieldNumber_Fid = 1,
  Frame_FieldNumber_Identity = 2,
  Frame_FieldNumber_DataTransfer = 3,
  Frame_FieldNumber_TransportUpgrade = 4,
};

typedef GPB_ENUM(Frame_OneOf_OneOfCase) {
  Frame_OneOf_OneOfCase_GPBUnsetOneOfCase = 0,
  Frame_OneOf_OneOfCase_Identity = 2,
  Frame_OneOf_OneOfCase_DataTransfer = 3,
  Frame_OneOf_OneOfCase_TransportUpgrade = 4,
};

/**
 * one message
 **/
@interface Frame : GPBMessage

/** ignore */
@property(nonatomic, readwrite) int64_t fid;  // int64_t == long long

@property(nonatomic, readonly) Frame_OneOf_OneOfCase oneOfOneOfCase; // 枚举

/**
 @interfe Identity : GPBMessage
 
 @property(nonatomic, readwrite) int64_t uid;  // id
 
 @property(nonatomic, readwrite, copy, null_resettable) NSString *alias;  // 内容
 
 @end
 */

@property(nonatomic, readwrite, strong, null_resettable) Identity *identity;  // 对象

/**
 @interce DataTransfer : GPBMessage
 // encypted data or protocol
 @property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;
 //  ignore
 @property(nonatomic, readwrite) int64_t from;
 // ignore
 @property(nonatomic, readwrite) int64_t to;

 @end
 */
@property(nonatomic, readwrite, strong, null_resettable) DataTransfer *dataTransfer;  // 对象


/**
 @inteace TransportUpgrade : GPBMessage
 
 @property(nonatomic, readwrite) int32_t code;
 
 @end
 */
/** ignore */
@property(nonatomic, readwrite, strong, null_resettable) TransportUpgrade *transportUpgrade;  //对象

@end

/**
 * Clears whatever value was set for the oneof 'oneOf'.
 **/
void Frame_ClearOneOfOneOfCase(Frame *message);

#pragma mark - Identity

typedef GPB_ENUM(Identity_FieldNumber) {
  Identity_FieldNumber_Uid = 1,
  Identity_FieldNumber_Alias = 2,
};

@interface Identity : GPBMessage

@property(nonatomic, readwrite) int64_t uid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;

@end

#pragma mark - DataTransfer

typedef GPB_ENUM(DataTransfer_FieldNumber) {
  DataTransfer_FieldNumber_Data_p = 1,
  DataTransfer_FieldNumber_From = 2,
  DataTransfer_FieldNumber_To = 3,
};

@interface DataTransfer : GPBMessage

// encypted data or protocol
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

//  ignore
@property(nonatomic, readwrite) int64_t from;

// ignore
@property(nonatomic, readwrite) int64_t to;

@end

#pragma mark - TransportUpgrade

typedef GPB_ENUM(TransportUpgrade_FieldNumber) {
  TransportUpgrade_FieldNumber_Code = 1,
};

// ignore
@interface TransportUpgrade : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
